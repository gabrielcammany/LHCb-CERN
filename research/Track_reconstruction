Track reconstruction will create tracks from the predicted hits in the NN model from PredictAllStationLayers_NN.

Data Features found: 

    - Slope of X0 vs X1 (8190 particles)
        Mean 0.016
        Variance 0.440
        
    - Slope of X0 vs U
        Mean -0.062931 
        Variance 3.852878 
        
    - Slope of V vs U
        Mean 0.019983 
        Variance 3.943988 
        
    - Slope of X1 vs U
        Mean 0.077136 
        Variance 3.207860 

In order to reduce the number of hits, I have applied:

    Layer 3:
    
    - Removed all hits with slope bigger or equal to 0.9
    - Removed all hits with a difference from the X0 bigger or equal to 180
    - Positive hits:
        * If the predicted X1 is bigger than the real X0, get all hits bigger than X0
        * Remove all hits smaller than the predicted position minous 10. 
    - Negative hits:
        * If the predicted X1 is smaller than the real X0, get all hits smaller than X0
        * Remove all hits bigger than the predicted position plus 10. 

    Layer 2:
    
    - Removed all hits with slope bigger or equal to 1.5
    - Removed all hits with a difference from the X0 bigger or equal to 220
    - Positive hits:
        * arr_layer2 > predicted[1] - 60
        * arr_layer2 < predicted[1] + 150
    - Negative hits:
        * arr_layer2 < predicted[1] + 60
        * arr_layer2 > predicted[1] - 150
    
With only 10 hit max: (with 7174 tracks)

    Mean found 3: 0.719125
    Mean total found 3: 4.606356
    Mean pos found 3: 1.086423

    Mean found 2: 0.792027
    Mean total found 2: 6.575551
    Mean pos found 2: 1.675634

    Mean Total Found: 0.618344

With only 15 hit max: (with 7174 tracks)
    
    Mean found 3: 0.774045
    Mean total found 3: 5.874826
    Mean pos found 3: 1.410231

    Mean found 2: 0.836493
    Mean total found 2: 8.052272
    Mean pos found 2: 2.141623

    Mean Total Found: 0.679955
    
Track reconstruction using the track_classifier NN

- Created a track with at least one hit similar to the real one:

    Mean found 3: 0.944476
    Mean total found 3: 12.773734
    Mean pos found 3: 3.217779

    Mean found 2: 0.945196
    Mean total found 2: 12.761220
    Mean pos found 2: 2.886507

    Mean Total Found: 0.308257

- As it can be seen, there are too much tracks found, so it is not really a viable solution.
    
Next version of the algorithm shows:
    
    The logic behind this new version is:
    - Iterate over all hits found from outwards (last X layer) towards the U-layer. For inside for, inside for. 
    - For each hit predicted in the last U-layer, a comparison between this one and the 
    last one, in terms of height is done. Discarding the ones with more than 15 difference between. 
    - Create tracks for each combination of hits that have less than 15 of difference and collect their height in a separate list.
    - Once hit combination per each layer is done, iterate over possible valid height hits and sort list based on the less difference between the actual height iteration.
    - Get the first value of each sorted list to create track candidate.
    
    - Results
        Event 1/5 	 Acc: 0.720000 Size 2.946667 Repeated: 0.447964
        Event 2/5 	 Acc: 0.685714 Size 3.371429 Repeated: 0.326271
        Event 3/5 	 Acc: 0.578431 Size 3.078431 Repeated: 0.302548
        Event 4/5 	 Acc: 0.652632 Size 2.073684 Repeated: 0.502538
        Event 5/5 	 Acc: 0.485714 Size 4.205714 Repeated: 0.216033

        Final Result:
            Mean: 0.624498
            Size: 3.135185
            Repeated: 0.338229
